'use strict';

app.controller('SubscribermgmtCtrl', function ($rootScope, $scope, $http, $location, $routeParams, SkillsService, ProgramsService, PrizesService, SubsBandService, SubtypesService, GenresService, limitToFilter, $dialog) {
        
        //$scope.subscriberSearchFormData={};
        

        $scope.days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
            

        $scope.skills = SkillsService.query();
        $scope.programs = ProgramsService.query();
        $scope.subtypes = SubtypesService.query();
        $scope.prizes = PrizesService.query();
        $scope.genres = GenresService.query();
       
        var subCell ='<input ng-class=\"\'colt\' + col.index\" ng-model=\"row.entity[col.field]\" ng-input=\"COL_FIELD\" ng-on-blur=\"updateSubtypes(col, row);\" />';
       
    
        $scope.gridSubtypeOptions = { 
            data: 'subtypes', 
            enableCellSelection: true,
            enableRowSelection: false,
            enableCellEdit: true,
            columnDefs: [
              {field: 'subtypecode', displayName: 'Sub Type', enableCellEdit: true, editableCellTemplate: subCell, width: 150}, 
              {field:'subtypedescription', displayName:'Description', enableCellEdit: true, editableCellTemplate: subCell},
              {field:'subtypevalue', displayName:'Value', enableCellEdit: true, cellFilter: 'currency', editableCellTemplate: subCell, width: 70},
                {field:'active', displayName:'Active?',  cellTemplate:'<div class="ngSelectionCell"><input tabindex="-1" class="ngSelectionCheckbox" type="checkbox" ng-model="row.entity[col.field]" ng-change="updateSubtypes(col, row)" ng-checked="row.entity[col.field]" /></div>', sortable:false, width:50},
            {field:'', cellTemplate: '<button class="close" style="float:left;padding-left:5px;" ng-click="deleteSubtype(col, row)">&times;</button> ', width: 30}
          ]
        };
    
        var programCell ='<input ng-class=\"\'colt\' + col.index\" ng-model=\"row.entity[col.field]\" ng-input=\"COL_FIELD\" ng-on-blur=\"updatePrograms(col, row);\" />';
        
        $scope.gridProgramOptions = { 
            data: 'programs', 
            enableCellSelection: true,
            enableRowSelection: false,
            enableCellEdit: true,
            showFilter: true,
            columnDefs: [
                {field:'programname', displayName: 'Program', enableCellEdit: true, editableCellTemplate: programCell}, 
                {field:'programdate', displayName:'Day', enableCellEdit: true, editableCellTemplate: programCell},
                {field:'programtime', displayName:'Hour', enableCellEdit: true, editableCellTemplate: programCell, width: 70},
                {field:'active', displayName:'Active?',  cellTemplate:'<div class="ngSelectionCell"><input tabindex="-1" class="ngSelectionCheckbox" type="checkbox" ng-model="row.entity[col.field]" ng-change="updatePrograms(col, row)" ng-checked="row.entity[col.field]" /></div>', sortable:false, width: 70},
                {field:'', cellTemplate: '<button class="close" style="float:left;padding-left:5px;" ng-click="deleteProgram(col, row)">&times;</button> ', width: 30}
          ]
        };
    
        $scope.gridSubskillOptions = { 
            data: 'skills', 
            enableCellSelection: true,
            enableRowSelection: false,
            enableCellEdit: true,
            columnDefs: [
                
                {field:'skilldescription', displayName: 'Skill', enableCellEdit: true, editableCellTemplate: "<input ng-class=\"'colt' + col.index\" ng-model=\"row.entity[col.field]\" ng-input=\"COL_FIELD\" ng-on-blur=\"updateSkills(col, row);\" />"}, 
                {field:'', cellTemplate: '<button class="close" style="float:left;padding-left:5px;" ng-click="deleteSkill(col, row)">&times;</button> ', width: 30}
          ]
        };
    
        var prizeCell ='<input ng-class=\"\'colt\' + col.index\" ng-model=\"row.entity[col.field]\" ng-input=\"COL_FIELD\" ng-on-blur=\"updatePrizes(col, row);\" />';
        
        $scope.gridPrizeOptions = { 
            data: 'prizes', 
            enableCellSelection: true,
            enableRowSelection: false,
            enableCellEdit: true,
            showFilter: true,
            columnDefs: [
                {field:'radiothonprize', displayName: 'Prize', enableCellEdit: true, editableCellTemplate: prizeCell}, 
                {field:'radiothonprizeyear', displayName:'Year', enableCellEdit: true, editableCellTemplate: prizeCell, width: 70},
                {field:'radiothonprizedescription', displayName:'Description', enableCellEdit: true, editableCellTemplate: prizeCell},
                {field:'subtypeid', displayName:'Sub', cellTemplate : '<div><select class="input-medium" ng-model="row.entity.subtypeid" ng-options="s.subtypeid as s.subtypecode for s in subtypes" ng-change="updatePrizes(col, row)"></select></div>'},
                {field:'currentyear', displayName:'Current Year?',  cellTemplate:'<div class="ngSelectionCell"><input tabindex="-1" class="ngSelectionCheckbox" type="checkbox" ng-model="row.entity[col.field]" ng-change="updatePrizes(col, row)" ng-checked="row.entity[col.field]" /></div>', sortable:false, width: 70},
                {field:'', cellTemplate: '<button class="close" style="float:left;padding-left:5px;" ng-click="deletePrize(col, row)">&times;</button> ', width: 30}
          ]
        };
        
    
        $scope.updateSkills = function(col, row){
            $scope.skill = SkillsService.get({id: row.entity.skillid});
            $scope.skill.skilldescription = row.entity.skilldescription;
            console.log($scope.skill);
            $scope.skill.$update({id: row.entity.skillid});   
              
        };
    
        $scope.addSkill = function(col, row){
            $scope.skill = new SkillsService;
            console.log($scope.skilldescription);
            $scope.skill.skilldescription = $scope.skilldescription;
            $scope.skill.$save(function(u, res) {   
                $scope.skills  = SkillsService.query();
            }); 
        };
    
        $scope.updateSubtypes = function(col, row){
            $scope.subtype = SubtypesService.get({id: row.entity.subtypeid});

            if (row.entity.active == false) {row.entity.active = 0; }
            $scope.subtype.subtypecode = row.entity.subtypecode;
            $scope.subtype.subtypedescription = row.entity.subtypedescription;
            $scope.subtype.subtypevalue = row.entity.subtypevalue;
            $scope.subtype.active = row.entity.active;
            $scope.subtype.$update({id: row.entity.subtypeid});   
              
        };
    
        $scope.addSubtype = function(col, row){
            $scope.subtype = new SubtypesService;
            $scope.subtype.subtypecode = $scope.subtypecode;
            $scope.subtype.subtypedescription = $scope.subtypedescription;
            $scope.subtype.subtypevalue = $scope.subtypevalue;
            $scope.subtype.active = true;
            $scope.subtype.$save(function(u, res) {   
                $scope.subtypes  = SubtypesService.query();
            }); 
        };
    
        $scope.updatePrizes = function(col, row){
            $scope.prize = PrizesService.get({id: row.entity.radiothonprizeid});

            if (row.entity.currentyear == false) {row.entity.currentyear = 0; }
            $scope.prize.radiothonprize = row.entity.radiothonprize;
            $scope.prize.radiothonprizedescription = row.entity.radiothonprizedescription;
            $scope.prize.radiothonprizeyear = row.entity.radiothonprizeyear;
            $scope.prize.subtypeid = row.entity.subtypeid;
            $scope.prize.currentyear = row.entity.currentyear;
            $scope.prize.$update({id: row.entity.radiothonprizeid});   
              
        };
    
        $scope.addPrize = function(col, row){
            $scope.prize = new PrizesService;
            $scope.prize.radiothonprize = $scope.radiothonprize;
            $scope.prize.radiothonprizedescription = $scope.radiothonprizedescription;
            $scope.prize.radiothonprizeyear = $scope.radiothonprizeyear;
            $scope.prize.subtypeid = $scope.prize_subtypeid;
            $scope.prize.currentyear = true;
            $scope.prize.$save(function(u, res) {   
                $scope.prizes = PrizesService.query();
            }); 
        };
    
        $scope.updatePrograms = function(col, row){
            $scope.program = ProgramsService.get({id: row.entity.programid});
            if (row.entity.active == false) {row.entity.active = 0; }
            $scope.program.programname = row.entity.programname;
            $scope.program.programdate = row.entity.programdate;
            $scope.program.programtime = row.entity.programtime;
            $scope.program.active = row.entity.active;
            $scope.program.$update({id: row.entity.programid});   
              
        };
    
        $scope.addProgram = function(col, row){
            $scope.program = new ProgramsService;
            $scope.program.programname = $scope.programname;
            $scope.program.programdate = $scope.programdate;
            $scope.program.programtime = $scope.programtime;
            $scope.program.active = true;
            $scope.program.$save(function(u, res) {   
                $scope.programs  = ProgramsService.query();
            }); 
        };
    
        $scope.deleteSkill = function(col, row) {
            
            var title = 'Warning';
            var msg = 'Are you sure you wish to delete this record? '+row.entity.skilldescription;
            var btns = [{result:'cancel', label: 'Cancel'}, {result:'ok', label: 'OK', cssClass: 'btn-primary btn-danger'}];
            
            
            $dialog.messageBox(title, msg, btns)
              .open()
              .then(function(result){
                if (result === 'ok') {
                    $scope.skill = SkillsService.get({id: row.entity.skillid});
                    $scope.skill.$delete({id: row.entity.skillid}, function() {
                            $scope.skills  = SkillsService.query();
                    });
                }
            });
                
        };
    
       $scope.deleteGenre = function(col, row) {
            
            var title = 'Warning';
            var msg = 'Are you sure you wish to delete this record? '+row.entity.genre_desc;
            var btns = [{result:'cancel', label: 'Cancel'}, {result:'ok', label: 'OK', cssClass: 'btn-primary btn-danger'}];
            
            
            $dialog.messageBox(title, msg, btns)
              .open()
              .then(function(result){
                if (result === 'ok') {
                    $scope.genre = GenresService.get({id: row.entity.genre_id});
                    $scope.genre.$delete({id: row.entity.genre_id}, function() {
                            $scope.genres  = GenresService.query();
                    });
                }
            });
                
        };

        $scope.deleteSubtype = function(col, row) {
            
            var title = 'Warning';
            var msg = 'Are you sure you wish to delete this record? '+row.entity.subtypecode;
            var btns = [{result:'cancel', label: 'Cancel'}, {result:'ok', label: 'OK', cssClass: 'btn-primary btn-danger'}];
            
            
            $dialog.messageBox(title, msg, btns)
              .open()
              .then(function(result){
                if (result === 'ok') {
                    $scope.subtype = SubtypesService.get({id: row.entity.subtypeid});
                    $scope.subtype.$delete({id: row.entity.subtypeid}, function() {
                            $scope.subtypes  = SubtypesService.query();
                    });
                }
            });
                
        };
    
        $scope.deletePrize = function(col, row) {
            
            var title = 'Warning';
            var msg = 'Are you sure you wish to delete this record? '+row.entity.radiothonprize;
            var btns = [{result:'cancel', label: 'Cancel'}, {result:'ok', label: 'OK', cssClass: 'btn-primary btn-danger'}];
            
            
            $dialog.messageBox(title, msg, btns)
              .open()
              .then(function(result){
                if (result === 'ok') {
                    $scope.prize = PrizesService.get({id: row.entity.radiothonprizeid});
                    $scope.prize.$delete({id: row.entity.radiothonprizeid}, function() {
                            $scope.prizes  = PrizesService.query();
                    });
                }
            });
                
        };

        $scope.deleteProgram = function(col, row) {
            
            var title = 'Warning';
            var msg = 'Are you sure you wish to delete this record? '+row.entity.programname;
            var btns = [{result:'cancel', label: 'Cancel'}, {result:'ok', label: 'OK', cssClass: 'btn-primary btn-danger'}];
            
            
            $dialog.messageBox(title, msg, btns)
              .open()
              .then(function(result){
                if (result === 'ok') {
                    $scope.program = ProgramsService.get({id: row.entity.programid});
                    $scope.program.$delete({id: row.entity.programid}, function() {
                            $scope.programs  = ProgramsService.query();
                    });
                }
            });
                
        };
  
    });
